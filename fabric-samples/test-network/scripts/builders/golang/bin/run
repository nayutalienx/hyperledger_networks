#!/bin/bash

BUILD_OUTPUT_DIR="$1"
RUN_METADATA_DIR="$2"

echo 'i am in run script' >> /log.txt
ls >> /log.txt

echo $1 >> /log.txt
echo $2 >> /log.txt

echo "dir1" >> /log.txt
cd $1
ls >> /log.txt
cd ..

echo "dir2" >> /log.txt

cd $2
ls >> /log.txt
cd ..

echo "what path really is" >> /log.txt
echo "$RUN_METADATA_DIR/chaincode.json" >> /log.txt


# setup the environment expected by the go chaincode shim
export CORE_CHAINCODE_ID_NAME="$(jq -r .chaincode_id "$RUN_METADATA_DIR/chaincode.json")"
export CORE_PEER_TLS_ENABLED="true"
export CORE_TLS_CLIENT_CERT_FILE="$RUN_METADATA_DIR/client.crt"
export CORE_TLS_CLIENT_KEY_FILE="$RUN_METADATA_DIR/client.key"
export CORE_PEER_TLS_ROOTCERT_FILE="$RUN_METADATA_DIR/root.crt"
export CORE_PEER_LOCALMSPID="$(jq -r .mspid "$RUN_METADATA_DIR/chaincode.json")"

echo "CORE_CHAINCODE_ID_NAME" >> /log.txt
echo $CORE_CHAINCODE_ID_NAME >> /log.txt

echo "CORE_PEER_LOCALMSPID" >> /log.txt
echo $CORE_PEER_LOCALMSPID >> /log.txt

# populate the key and certificate material used by the go chaincode shim
jq -r .client_cert "$RUN_METADATA_DIR/chaincode.json" > "$CORE_TLS_CLIENT_CERT_FILE"
jq -r .client_key  "$RUN_METADATA_DIR/chaincode.json" > "$CORE_TLS_CLIENT_KEY_FILE"
jq -r .root_cert   "$RUN_METADATA_DIR/chaincode.json" > "$CORE_PEER_TLS_ROOTCERT_FILE"
if [ -z "$(jq -r .client_cert "$RUN_METADATA_DIR/chaincode.json")" ]; then
    export CORE_PEER_TLS_ENABLED="false"
fi

echo "CORE_TLS_CLIENT_CERT_FILE" >> /log.txt
echo $CORE_TLS_CLIENT_CERT_FILE >> /log.txt

echo "CORE_TLS_CLIENT_KEY_FILE" >> /log.txt
echo $CORE_TLS_CLIENT_KEY_FILE >> /log.txt

echo "CORE_PEER_TLS_ROOTCERT_FILE" >> /log.txt
echo $CORE_PEER_TLS_ROOTCERT_FILE >> /log.txt

# exec the chaincode to replace the script with the chaincode process
#exec "$BUILD_OUTPUT_DIR/chaincode" -peer.address="$(jq -r .peer_address "$RUN_METADATA_DIR/chaincode.json")"
/root/go/bin/dlv --listen=:40000 --headless=true --api-version=2 --accept-multiclient exec --continue "$BUILD_OUTPUT_DIR/chaincode" -- --peer.address="$(jq -r .peer_address "$RUN_METADATA_DIR/chaincode.json")"